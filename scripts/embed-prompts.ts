#!/usr/bin/env -S deno run --allow-read --allow-write

// Script to embed all prompt files into a TypeScript module
// This allows edge functions to access prompts without file system access

import { join } from "https://deno.land/std@0.208.0/path/mod.ts";
import { walk } from "https://deno.land/std@0.208.0/fs/walk.ts";

const PROMPTS_DIR = join(Deno.cwd(), "supabase/functions/_shared/prompts");
const OUTPUT_FILE = join(Deno.cwd(), "supabase/functions/_shared/embedded-prompts.ts");

interface PromptFile {
  key: string;
  path: string;
  content: string;
}

async function main() {
  console.log("Embedding prompts from:", PROMPTS_DIR);

  const prompts: PromptFile[] = [];

  // Walk through all prompt files
  for await (const entry of walk(PROMPTS_DIR, { exts: [".md", ".hbs"] })) {
    if (entry.isFile) {
      const relativePath = entry.path.slice(PROMPTS_DIR.length + 1);
      const content = await Deno.readTextFile(entry.path);

      prompts.push({
        key: relativePath,
        path: entry.path,
        content,
      });

      console.log(`  ✓ ${relativePath}`);
    }
  }

  // Generate TypeScript module
  const lines = [
    "// Auto-generated file - DO NOT EDIT",
    "// Generated by scripts/embed-prompts.ts",
    "",
    "export const EMBEDDED_PROMPTS: Record<string, string> = {",
  ];

  for (const prompt of prompts) {
    const escaped = prompt.content
      .replace(/\\/g, "\\\\")
      .replace(/`/g, "\\`")
      .replace(/\$/g, "\\$");

    lines.push(`  "${prompt.key}": \`${escaped}\`,`);
  }

  lines.push("};");
  lines.push("");

  const output = lines.join("\n");
  await Deno.writeTextFile(OUTPUT_FILE, output);

  console.log(`\n✅ Embedded ${prompts.length} prompts to:`, OUTPUT_FILE);
}

main().catch(console.error);
